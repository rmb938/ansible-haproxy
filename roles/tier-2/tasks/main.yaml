- name: HAProxy T2 Service Consul Config
  ansible.builtin.template:
    src: etc/consul.d/50_haproxy-t2.service.hcl
    dest: /etc/consul.d/50_haproxy-t2.service.hcl
    mode: "0644"
    owner: consul
    group: consul
  register: haproxy_t2_service_consul_config

- name: Restart Consul # noqa: no-handler
  ansible.builtin.systemd_service:
    name: consul
    state: restarted
  when: haproxy_t2_service_consul_config.changed

- name: Disable HAProxy
  ansible.builtin.systemd_service:
    name: haproxy
    # Make sure haproxy service is disabled, only consul-template-consul should start it
    enabled: false

- name: Get Step x5c certificates from Vault
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail &&
      vault write pki_step_x5c_haproxy_intermediate/issue/pki_step_x5c_haproxy_intermediate_default
      common_name=haproxy.us-homelab1.hl.rmb938.me -format=json > /etc/ssl/private/vault-step-x5c-haproxy.json
    executable: /bin/bash
  environment:
    VAULT_ADDR: "http://127.0.0.1:8100"
  args:
    creates: "/etc/ssl/private/vault-step-x5c-haproxy.json"
  register: vault_x5c_json

- name: Split Private Key from x5c json # noqa: no-handler
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail &&
      cat /etc/ssl/private/vault-step-x5c-haproxy.json | jq '.data.private_key' -r > /etc/ssl/private/vault-step-x5c-haproxy.key
    executable: /bin/bash
  changed_when: false
  when: vault_x5c_json.changed

- name: Split Certificate from x5c json # noqa: no-handler
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail &&
      cat /etc/ssl/private/vault-step-x5c-haproxy.json | jq '.data.certificate' -r > /etc/ssl/private/vault-step-x5c-haproxy.crt &&
      cat /etc/ssl/private/vault-step-x5c-haproxy.json | jq '.data.issuing_ca' -r >> /etc/ssl/private/vault-step-x5c-haproxy.crt
    executable: /bin/bash
  changed_when: false
  when: vault_x5c_json.changed

- name: Create HAProxy Certificates
  ansible.builtin.command: >-
    step ca certificate *.haproxy.us-homelab1.hl.rmb938.me
    /etc/ssl/private/haproxy.crt
    /etc/ssl/private/haproxy.crt.key
    --x5c-cert=/etc/ssl/private/vault-step-x5c-haproxy.crt
    --x5c-key=/etc/ssl/private/vault-step-x5c-haproxy.key
    --ca-url https://step-ca.us-homelab1.hl.rmb938.me:9443
    --root /usr/local/share/ca-certificates/smallstep-homelab-prod.crt
  args:
    creates: "/etc/ssl/private/haproxy.crt"

- name: Cron to renew HAProxy certificates
  ansible.builtin.cron:
    name: "renew haproxy certificates"
    special_time: "hourly"
    # Rekey needs to happen against the CA, RA's don't support rekey
    # https://smallstep.com/docs/step-ca/registration-authority-ra-mode/#stepcas-limitations
    job: >-
      step ca rekey /etc/ssl/private/haproxy.crt
      /etc/ssl/private/haproxy.crt.key
      --ca-url https://step-ca.us-homelab1.hl.rmb938.me
      --root /usr/local/share/ca-certificates/smallstep-homelab-prod.crt
      --force --expires-in 720h --exec "systemctl try-reload-or-restart haproxy"
    state: present

# Start Consul Template for HAProxy
- name: Add haproxy to sudoers
  community.general.sudoers:
    name: haproxy
    user: haproxy
    nopassword: true
    validation: required
    commands:
      - /usr/bin/systemctl reload-or-restart haproxy
    state: present

- name: Configure Consul Template for HAProxy
  ansible.builtin.template:
    src: etc/consul-template/consul-template-haproxy.hcl
    dest: /etc/consul-template/consul-template-haproxy.hcl
    mode: "0644"
    owner: haproxy
    group: haproxy
  register: consul_template_haproxy_config

- name: Create Consul Template for HAProxy Templates directory
  ansible.builtin.file:
    path: /etc/consul-template/templates/haproxy/
    state: directory
    mode: "0744"
    owner: haproxy
    group: haproxy

- name: Place Consul Template for HAProxy Templates Files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/haproxy/{{ item | basename }}"
    mode: "0644"
    owner: haproxy
    group: haproxy
  with_fileglob:
    - ../files/etc/consul-template/templates/haproxy/*.ctmpl
  register: consul_template_haproxy_templates_files

- name: Place Consul Template for HAProxy Templates Templates
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/consul-template/templates/haproxy/{{ item | basename }}"
    mode: "0644"
    owner: haproxy
    group: haproxy
  with_fileglob:
    - ../templates/etc/consul-template/templates/haproxy/*.ctmpl
  register: consul_template_haproxy_templates

- name: Consul Template for HAProxy SystemD
  ansible.builtin.template:
    src: etc/systemd/system/consul-template-haproxy.service
    dest: /etc/systemd/system/consul-template-haproxy.service
    mode: "0644"
  register: consul_template_haproxy_systemd

- name: Consul Template for HAProxy systemd # noqa: no-handler
  ansible.builtin.systemd:
    daemon_reload: true
  when: consul_template_haproxy_systemd.changed

- name: Start and enable Consul Template for HAProxy
  ansible.builtin.systemd:
    name: consul-template-haproxy
    state: started
    enabled: true

- name: Restart Consul Template for HAProxy if config changed # noqa: no-handler
  ansible.builtin.systemd:
    name: consul-template-haproxy
    state: reloaded
  when: consul_template_haproxy_templates.changed or consul_template_haproxy_config.changed or consul_template_haproxy_templates_files.changed
# End Consul Template for HAProxy
